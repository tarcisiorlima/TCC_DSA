########################
# Instalação de pacotes
pacotes <- c('titanic',    # carrega a base original titanic_treino
'tidyverse',  # Pacote básico de datawrangling
'rpart',      # Biblioteca de árvores
'rpart.plot', # Conjunto com Rpart, plota a parvore
'gtools',     # funções auxiliares como quantcut,
'Rmisc',      # carrega a função sumarySE para a descritiva
'scales',     # importa paletas de cores
'caret'       # Funções úteis para machine learning
)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
########################
# Instalação de pacotes
pacotes <- c('tidyverse',  # Pacote básico de datawrangling
'rpart',      # Biblioteca de árvores
'rpart.plot', # Conjunto com Rpart, plota a parvore
'gtools',     # funções auxiliares como quantcut,
'Rmisc',      # carrega a função sumarySE para a descritiva
'scales',     # importa paletas de cores
'caret'       # Funções úteis para machine learning
)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
library(readr)
data_base <- read.csv (~/MBA/TCC/arvore de decisao)
data_base <- read.csv ("~/MBA/TCC/arvore de decisao")
########################
# Instalação de pacotes
pacotes <- c('tidyverse',  # Pacote básico de datawrangling
'rpart',      # Biblioteca de árvores
'rpart.plot', # Conjunto com Rpart, plota a parvore
'gtools',     # funções auxiliares como quantcut,
'Rmisc',      # carrega a função sumarySE para a descritiva
'scales',     # importa paletas de cores
'caret'       # Funções úteis para machine learning
)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
library(readr)
ai4i2020_arvored_decisao <- read_csv("ai4i2020_arvored_decisao.csv")
View(ai4i2020_arvored_decisao)
tmp <- ai4i2020_arvored_decisao
tmp$Machine_failure <-(ai4i2020_arvored_decisao$"Machine failure")
tmp$Air_temperature_K <- ai4i2020_arvored_decisao$"Air temperature [K]"
tmp$Torque_Nm <- ai4i2020_arvored_decisao$"Torque [Nm]"
tmp$Tool_wear_min <- ai4i2020_arvored_decisao$"Tool wear [min]"
tmp$Rotational_speed_rpm <- ai4i2020_arvored_decisao$"Rotational speed [rpm]"
RStudio.Version()
r.version()
R.version(0)
R.version()
version()
version
